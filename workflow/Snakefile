from damply import dirs as dmpdirs

# Build combined dataset name using config values
COMBINED_DATA_NAME = str(config['DATA_SOURCE']) + "_" + str(config['DATASET_NAME'])
dataset = config["DATASET_NAME"]

# Include feature extraction rules
#include: "scripts/radiomics/mit/run_mit.smk"
include: "scripts/radiomics/feature_extraction/run_feature_extraction.smk"

# Binarize segmentation masks
rule binarize_masks:
    output:
        log_file = f"logs/binarize_masks_{dataset}.log"
    shell:
        """
        pixi run python workflow/scripts/radiomics/readii/process_masks.py --dataset {dataset}.yaml > {output.log_file} 2>&1
        """

# Final target: merged radiomics feature CSV
rule all:
    input:
       dmpdirs.RESULTS / f"radiomics/{COMBINED_DATA_NAME}_features.csv"

# Legacy: original indexing and extraction pipeline (commented out below)
# rule all:
#     # Target rule
#     input:
#         mit_autopipeline_index=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "images" / f"mit_{config['DATASET_NAME']}" / f"mit_{config['DATASET_NAME']}_index.csv",
#         mit_niftis_directory=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "images" / f"mit_{config['DATASET_NAME']}",
#         feature_extraction_index_directory=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "features" / f"{config['EXTRACTION']['METHOD']}",
#         feature_extraction_index_file=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "features" / f"{config['EXTRACTION']['METHOD']}" / f"{config['EXTRACTION']['METHOD']}_{config['DATASET_NAME']}_index.csv"
    

# rule run_extraction_index:
#     input:
#         mit_simple_index_file=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "images" / f"mit_{config['DATASET_NAME']}" / f"mit_{config['DATASET_NAME']}_index-simple.csv",
#     output:
#         feature_extraction_index_directory=directory(dmpdirs.PROCDATA / COMBINED_DATA_NAME / "features" / f"{config['EXTRACTION']['METHOD']}"),
#         feature_extraction_index_file=dmpdirs.PROCDATA / COMBINED_DATA_NAME / "features" / f"{config['EXTRACTION']['METHOD']}" / f"{config['EXTRACTION']['METHOD']}_{config['DATASET_NAME']}_index.csv"
#     params:
#         dataset=config['DATASET_NAME'],
#         method=config['EXTRACTION']['METHOD']
#     shell:
#         "python workflow/scripts/radiomics/feature_extraction/index.py --dataset {params.dataset} --method {params.method}"


